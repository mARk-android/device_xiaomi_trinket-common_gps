--- android/2.0/location_api/MeasurementAPIClient.cpp
+++ android/2.0/location_api/MeasurementAPIClient.cpp
@@ -421,50 +424,13 @@ static void convertGnssData_2_0(GnssMeasurementsNotification& in,
             out.measurements[i].state |= IGnssMeasurementCallback::GnssMeasurementState::STATE_2ND_CODE_LOCK;
     }
     convertGnssClock(in.clock, out.clock);
-
-    const uint32_t UTC_TO_GPS_SECONDS = 315964800;
-    struct timespec currentTime;
-    int64_t sinceBootTimeNanos;
-
-    if (getCurrentTime(currentTime, sinceBootTimeNanos) &&
-        in.clock.flags & GNSS_MEASUREMENTS_CLOCK_FLAGS_LEAP_SECOND_BIT &&
-        in.clock.flags & GNSS_MEASUREMENTS_CLOCK_FLAGS_FULL_BIAS_BIT &&
-        in.clock.flags & GNSS_MEASUREMENTS_CLOCK_FLAGS_BIAS_BIT &&
-        in.clock.flags & GNSS_MEASUREMENTS_CLOCK_FLAGS_BIAS_UNCERTAINTY_BIT) {
-        int64_t currentTimeNanos = currentTime.tv_sec * 1000000000 + currentTime.tv_nsec;
-        int64_t measTimeNanos = (int64_t)in.clock.timeNs - (int64_t)in.clock.fullBiasNs
-                - (int64_t)in.clock.biasNs - (int64_t)in.clock.leapSecond * 1000000000
-                + (int64_t)UTC_TO_GPS_SECONDS * 1000000000;
-
-        LOC_LOGd("sinceBootTimeNanos:%" PRIi64 " currentTimeNanos:%" PRIi64 ""
-                 " measTimeNanos:%" PRIi64 "",
-                 sinceBootTimeNanos, currentTimeNanos, measTimeNanos);
-        if (currentTimeNanos >= measTimeNanos) {
-            int64_t ageTimeNanos = currentTimeNanos - measTimeNanos;
-            LOC_LOGD("%s]: ageTimeNanos:%" PRIi64 ")", __FUNCTION__, ageTimeNanos);
-            // the max trusted propagation time 100ms for ageTimeNanos to avoid user setting
-            //wrong time, it will affect elapsedRealtimeNanos
-            if (ageTimeNanos <= 100000000) {
-                out.elapsedRealtime.flags |= ElapsedRealtimeFlags::HAS_TIMESTAMP_NS;
-                out.elapsedRealtime.timestampNs = sinceBootTimeNanos - ageTimeNanos;
-                out.elapsedRealtime.flags |= ElapsedRealtimeFlags::HAS_TIME_UNCERTAINTY_NS;
-                // time uncertainty is the max value between abs(AP_UTC - MP_UTC) and 100ms, to
-                //verify if user change the sys time
-                out.elapsedRealtime.timeUncertaintyNs =
-                        std::max(ageTimeNanos, (int64_t)100000000);
-                LOC_LOGd("timestampNs:%" PRIi64 ") timeUncertaintyNs:%" PRIi64 ")",
-                         out.elapsedRealtime.timestampNs,
-                         out.elapsedRealtime.timeUncertaintyNs);
-            }
-        }
-    } else {
-        LOC_LOGe("Failed to calculate elapsedRealtimeNanos timestamp");
-    }
+    convertElapsedRealtimeNanos(in, out.elapsedRealtime);
 }
 
 static void convertGnssMeasurementsCodeType(GnssMeasurementsCodeType& in,
         ::android::hardware::hidl_string& out)
 {
+    memset(&out, 0, sizeof(out));
     switch(in) {
         case GNSS_MEASUREMENTS_CODE_TYPE_A:
             out = "A";
